// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid()) 
  authProviderId String    @unique             
  email          String    @unique            

  name           String                       
  schoolId       String?
  oen            String?                   

  createdAt      DateTime  @default(now())     // Automatically set when user record is created
  updatedAt      DateTime  @updatedAt          // Automatically set when user record is updated
  Submissions    Submission[]
}

model Submission {
  id             String    @id @default(cuid())
  orgName        String?   
  hours          Float?     
  submissionDate DateTime?  
  description    String?
  supervisorSignatureUrl   String?
  preApprovedSignatureUrl  String?
  status         SubmissionStatus @default(DRAFT)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  // --- Define Relationship ---
  student        User      @relation(fields: [studentId], references: [id], onDelete: Cascade) // Link to User, Cascade delete if user is deleted
  studentId      String    // Foreign key storing the User's internal id

  // Optional: Add index for faster lookups by student
  // @@index([studentId]) 
}

enum SubmissionStatus {
  DRAFT
  SUBMITTED
}